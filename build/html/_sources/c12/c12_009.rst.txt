第 9 节
=======

叭叭叭
======

得道多助深V
===========

**对对对**

*单独* \**\* [STRIKEOUT:刺激经济] 1. 这是第一个有序列表 2.
这是第二个有序列表 3. 这是第三个有序列表

1. 这是第一个有序列表 这是同个列表下，另起一行的文本内容

2. 这是第二个有序列表 这是同个列表下，另起一行的文本内容

3. 这是第一个有序列表 这是同个列表下，另起一行的文本内容

4. 这是第二个有序列表 这是同个列表下，另起一行的文本内容

..

   这是第一段引用文本的第1行 这是第一段引用文本的第2行
   这是第二段引用文本的第1行 这是第二段引用文本内第2行

   这是第一段引用文本的第1行 这是第一段引用文本的第2行
   这是第二段引用文本的第1行 这是第二段引用文本内第2行

`显示文本内容 <链接地址>`__
`百度一下，你就知道 <http://www.baidu.com>`__

\|这里是表头1|这里是表头2|这里是表头3\| \|:-|:-:|-:\|
\|单元格数据1|单元格数据2|单元格数据3\|
\|单元格数据4|单元格数据5|单元格数据6\|

\|这里是表头1|这里是表头2|这里是表头3\| \|:-|:-:|-:\|
\|单元格数据1|单元格数据2|单元格数据3\|
\|单元格数据4|单元格数据5|单元格数据6\|

================================ ========
表头1                            表头2
================================ ========
这是第一行文本这是另起一行的文本 普通文本
================================ ========

``这是一段行内代码``
``<table border="1" cellspacing="0" width="500" height="500">``
``print("Hello, World!")`` ``这是一行突出显示的文本内容``

下面是Python代码块

.. code:: python

   #!/usr/bin/python
   # -*- coding: UTF-8 -*-
   i = 2
   while(i < 100):
   j = 2
   while(j <= (i/j)):
   if not(i%j): break
   j = j + 1
   if (j > i/j) : print i, " 是素数"
   i = i + 1
   print "Good bye!"

下面是一块突出显示的文本

.. code:: txt

   这是一段
   突出显示的
   文本内容

.. code:: txt

   ```js
   // 3. 输出 100以内(不包括100) 所有偶数的和
   // 这类求和问题的核心 ： 利用循环 (总和 = 旧数的和 + 新数)
   let sum = 0;
   for (let i = 1, sum = 0; i < 100; i++) {
   if (i % 2 == 0) {
   // 筛选偶数
   sum += i; // sum = sum + i // 累加偶数并赋值给sum
   // sum为(旧的，已经进入循环的数)的和，i 为新进入循环的数。当加到(最后一个新数i)时，sum就是最后的
   }
   }
   console.log(sum); // 打印总和
   ```

-  ☐ 待办任务列表1
-  ☐ 待办任务列表2
-  ☒ 已办任务列表1
-  ☒ 已办任务列表2

.. raw:: html

   <!-- 这里是一行注释 -->

.. raw:: html

   <!--
   这里是
   一段
   假装有
   很多行的
   注释
   -->

%%这是一行Obsidian里的注释%% %% 这里是 一段 假装有 很多行的 Obsidian里的
注释 %%

鲁迅原名是什么[^1] ，浙江哪里人[^2] [^1]: 周树人 [^2]: 绍兴人

================= ===================
表头1             表头2
================= ===================
这里的文本被|分隔 这里的文本也被|分隔
================= ===================

<audio controls=“controls” preload=“none”
src=“https://www.ldoceonline.com/media/english/

.. raw:: html

   <audio controls="controls" preload="none" src="音频链接地址">

.. raw:: html

   </audio>

.. raw:: html

   <iframe width="600" height="400" src="https://www.ldoceonline.com/media/english/" scrolling="auto" border="0" frameborder="no" framespacing="0" allowfullscreen="true">

.. raw:: html

   </iframe>

示例： :math:`x^2 + 2x + 5 + \sqrt x = 0` :math:`\ce{CO2 + C -> 2 CO}`
:math:`\ce{CO2 + C -> 2 CO}` :math:`\ce{2Mg + O2 ->[燃烧] 2 MgO}`

% 化学公式

.. math::


   \ce{Zn^2+ <=>[+ 2OH-][+ 2H+] $\underset{\text{amphoteres Hydroxid}}{\ce{Zn(OH)2 v}}$ <

% 麦克斯韦方程组

.. math::


   \begin{array}{lll}
   \nabla\times E &=& -\;\frac{\partial{B}}{\partial{t}}
   \ \nabla\times H &=& \frac{\partial{D}}{\partial{t}}+J
   \ \nabla\cdot D &=& \rho
   \ \nabla\cdot B &=& 0
   \ \end{array}

.. code:: mermaid

   graph TB
   %% s=start e=end f=fork n=normal
   s([开始])-->f1{{if条件}};
   %% 分支点2
   f1--true-->n1[if语句块]-->e([结束]);
   f1--false-->f2{{else if条件}};
   %% 分支点1
   f2--true-->n2[else if语句块]-->e;
   f2--false-->n3[else语句块]-->e;

.. code:: mermaid

   graph LR
   %% s=start e=end f= fork n=normal
   %% 虚线
   s[朱百六]-.->|子|n1[朱四九]-.->|子|n2[朱五四]-.->|子|f1_帝((朱八八))
   %% 分支点 朱八八
   f1_帝-->|长子|f2[朱标]
   f1_帝-->|次子|n3[朱樉]
   f1_帝-->|三子|n4[朱棢]
   f1_帝-->|四子|n5_帝((朱棣))
   %% 分支点 朱标
   f2-->|长子|e1[朱雄英]
   f2-->|次子|e2_帝((朱允炆))
   n5_帝-->|长子|e3[朱高炽]

.. code:: mermaid

   pie
   title 为什么总是宅在家里？
   "喜欢宅" : 45
   MD
   渲染：
   6%
   10%
   70%
   13%
   为什么总是宅在家⾥？
   喜欢宅
   天气太热
   穷
   关你屁事
   源码：
   "天气太热" : 70
   "穷" : 500
   "关你屁事" : 95

.. code:: mermaid

   pie
   title 为什么总是宅在家里？
   "喜欢宅" : 45
   "天气太热" : 70
   "穷" : 500
   "关你屁事" : 95

.. code:: mermaid

   gantt
   title A Gantt Diagram
   dateFormat YYYY-MM-DD
   section Section
   A task :a1, 2014-01-01, 30d
   Another task :after a1 , 20d
   section Another
   Task in sec :2014-01-12 , 12d
   another task : 24d


   ```mermaid
   classDiagram
   Animal <|-- Duck
   Animal <|-- Fish
   Animal <|-- Zebra
   Animal : +int age
   Animal : +String gender
   Animal: +isMammal()
   Animal: +mate()
   class Duck{
   +String beakColor
   +swim()
   +quack()
   }
   class Fish{
   -int sizeInFeet
   -canEat()
   }
   class Zebra{
   +bool is_wild
   +run()
   }
